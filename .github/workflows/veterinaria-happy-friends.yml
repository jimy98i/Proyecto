name: Veterinaria Happy Friends

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Frontend and Backend
        run: |
          # Construir el frontend (React + Vite)
          cd frontend
          npm install
          npm run build
          cd ..
          # Construir el backend (Laravel)
          cd backend
          composer install --no-dev --optimize-autoloader
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          cd ..

      - name: Prepare deploy-dist folder
        if: github.ref == 'refs/heads/main'
        run: |
          rm -rf deploy-dist
          mkdir -p deploy-dist/backend
          # Copiar backend necesario
          rsync -av --exclude='node_modules' --exclude='tests' --exclude='.env.example' --exclude='README.md' backend/ deploy-dist/backend/
          # Copiar todo el build del frontend (incluyendo index.html y assets) a la carpeta pública del backend
          rsync -av frontend/dist/ deploy-dist/backend/public/

      - name: Debug frontend build
        run: |
          echo "Contenido de backend/public/build tras el build de Vite:"
          ls -l backend/public/build || echo "No existe backend/public/build"

      - name: Check Vite build output
        run: |
          if [ ! -f frontend/dist/index.html ]; then
            echo "ERROR: El build de Vite no generó index.html en frontend/dist."
            exit 1
          fi
          if [ ! -d frontend/dist/assets ]; then
            echo "ERROR: El build de Vite no generó la carpeta de assets en frontend/dist."
            exit 1
          fi
          echo "Build de Vite generado correctamente."

      - name: Deploy to Production (FTP)
        if: github.ref == 'refs/heads/main'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_TARGET || '/web/public/' }}
          local-dir: ./deploy-dist/backend/
          exclude: |
            **/.git*
            **/node_modules/**
            **/tests/**
            **/docker-compose.yml
            **/Dockerfile*
            **/.env.example
            **/README.md
            **/.github/**

      - name: Run Laravel Migrations and Seeders
        if: github.ref == 'refs/heads/main'
        run: |
          cd deploy-dist/backend
          composer install --no-dev --optimize-autoloader
          php artisan migrate --force
          php artisan db:seed --force
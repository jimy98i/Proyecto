name: Veterinaria Happy Friends

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configurar Node.js para el Frontend
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      # Construir el Frontend
      - name: Build Frontend
        run: |
          cd frontend
          # Crear archivos .env
          echo "VITE_API_URL=http://www.veterinariahappyfriends.es.mialias.net/api" > .env
          echo "VITE_APP_URL=http://www.veterinariahappyfriends.es.mialias.net" >> .env
          echo "VITE_API_URL=http://www.veterinariahappyfriends.es.mialias.net/api" > .env.production
          echo "VITE_APP_URL=http://www.veterinariahappyfriends.es.mialias.net" >> .env.production
          # Instalar dependencias y construir
          npm install
          npm run build
          # Preparar directorio web
          mkdir -p ../web
          cp -r ../public/build/* ../web/
          # Crear .htaccess para React Router
          echo "<IfModule mod_rewrite.c>" > ../web/.htaccess
          echo "  RewriteEngine On" >> ../web/.htaccess
          echo "  RewriteBase /" >> ../web/.htaccess
          echo "  RewriteRule ^index\.html$ - [L]" >> ../web/.htaccess
          echo "  RewriteCond %{REQUEST_FILENAME} !-f" >> ../web/.htaccess
          echo "  RewriteCond %{REQUEST_FILENAME} !-d" >> ../web/.htaccess
          echo "  RewriteRule . /index.html [L]" >> ../web/.htaccess
          echo "</IfModule>" >> ../web/.htaccess

      # Configurar PHP para el Backend
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql, zip
          coverage: none

      # Construir el Backend
      - name: Build Backend
        run: |
          cd backend
          # Crear directorios necesarios
          mkdir -p storage/app/public
          mkdir -p storage/framework/cache
          mkdir -p storage/framework/sessions
          mkdir -p storage/framework/views
          mkdir -p storage/logs
          mkdir -p bootstrap/cache
          mkdir -p public
          # Instalar dependencias
          composer install --no-dev --optimize-autoloader
          # Crear .env
          echo "APP_NAME=VeterinariaHappyFriends" > .env
          echo "APP_ENV=production" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "APP_URL=http://www.veterinariahappyfriends.es.mialias.net/api" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=veterinaria" >> .env
          echo "DB_USERNAME=myveterina33" >> .env
          echo "DB_PASSWORD=7InS3vXl" >> .env
          # Configurar Laravel
          php artisan key:generate --force
          php artisan config:cache
          php artisan view:cache
          # Crear enlace simb√≥lico para storage
          rm -f public/storage
          ln -sfn ../storage/app/public public/storage
          # Preparar directorio api
          mkdir -p ../web/api
          cp -r * ../web/api/
          cp -r .env ../web/api/
          # Crear .htaccess para Laravel
          echo "<IfModule mod_rewrite.c>" > ../web/api/.htaccess
          echo "  RewriteEngine On" >> ../web/api/.htaccess
          echo "  RewriteBase /api/" >> ../web/api/.htaccess
          echo "  RewriteCond %{REQUEST_FILENAME} !-d" >> ../web/api/.htaccess
          echo "  RewriteCond %{REQUEST_FILENAME} !-f" >> ../web/api/.htaccess
          echo "  RewriteRule ^ index.php [L]" >> ../web/api/.htaccess
          echo "</IfModule>" >> ../web/api/.htaccess

      # Preparar permisos
      - name: Prepare Deployment
        run: |
          chmod -R 755 web
          chmod -R 777 web/api/storage
          chmod -R 777 web/api/bootstrap/cache

      # Desplegar por FTP
      - name: Deploy to Server
        if: github.ref == 'refs/heads/main'
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./web/
          server-dir: /web/
      
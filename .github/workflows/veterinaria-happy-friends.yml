name: Veterinaria Happy Friends

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build with Docker Compose
        run: |
          # Construir el frontend (React + Vite)
          cd frontend
          docker-compose run --rm frontend npm install
          docker-compose run --rm frontend npm run build
          
          # Construir el backend (Laravel)
          cd ../backend
          docker-compose run --rm backend composer install --no-dev --optimize-autoloader
          docker-compose run --rm backend php artisan config:cache
          docker-compose run --rm backend php artisan route:cache
          docker-compose run --rm backend php artisan view:cache
          
          # Volver al directorio raíz y construir los contenedores
          cd ..
          docker-compose build
          docker-compose up -d
          
          # Esperar a que los servicios estén listos
          sleep 30
          
          # Verificar que los contenedores están corriendo
          docker-compose ps
          
          # Verificar que Nginx está sirviendo correctamente
          curl -I http://localhost:80

      - name: Deploy to Production (FTP)
        if: github.ref == 'refs/heads/main'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_TARGET || '/web/public' }}
          local-dir: ./deploy-dist/
          exclude: |
            **/.git*
            **/node_modules/**
            **/tests/**
            **/docker-compose.yml
            **/Dockerfile*
            **/.env.example
            **/README.md
            **/.github/**
      - name: Prepare deploy-dist folder
        if: github.ref == 'refs/heads/main'
        run: |
          rm -rf deploy-dist
          mkdir -p deploy-dist/backend deploy-dist/frontend
          # Copiar backend necesario
          rsync -av --exclude='node_modules' --exclude='tests' --exclude='.env.example' --exclude='README.md' backend/ deploy-dist/backend/
          # Copiar frontend compilado
          rsync -av frontend/dist/ deploy-dist/frontend/
          # Copiar archivos raíz necesarios
          cp docker-compose.yml deploy-dist/ || true
      - name: Run Laravel Migrations and Seeders
        if: github.ref == 'refs/heads/main'
        run: |
          cd deploy-dist/backend
          composer install --no-dev --optimize-autoloader
          php artisan migrate --force
          php artisan db:seed --force
